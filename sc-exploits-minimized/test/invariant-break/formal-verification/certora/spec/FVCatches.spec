// We want to test the invariant here:
// hellFunc must NEVER revert

// Rule: do x, y and z -> prove A
// Invariants: at any state in the contract, does "A" hold?

// Tell our spec about the contract we want to formally verify?

methods {
    // function hellFunc(uint128) external returns (uint256) envfree;
    // envfree means the environment doesnt matter, ie. theres no msg.value, msg.sender doesnt matter
    function hellFunc(uint128) external returns (uint256);
 }

rule hellFuncMustNeverRevert(uint128 number) {
    
    // code -> math
    // assert(true);
    // how do we "run" our hellFunc?

    // Pre-conditions
    require(currentContract.numbr == 10);
    require(currentContract.namber == 3);
    require(currentContract.nunber == 5);
    require(currentContract.mumber == 7);
    require(currentContract.numbor == 2);
    require(currentContract.numbir == 10);
    env e;
    require(e.msg.value == 0);

    // if we didnt use the `envfree` keyword on our method, we need to pass the environment as the first argument
    hellFunc@withrevert(e, number);
    assert(lastReverted == false);
}

